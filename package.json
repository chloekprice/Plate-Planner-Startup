{
  "name": "startup",
  "version": "1.0.0",
  "description": "Startup project called \"Plate Planner\" made in conjunction with CS 260 (Web Programming).\r ## Startup Specification\r ### Elevator Pitch\r Imagine that it is the end of the week and your refrigerator is absolutely bare. You do not have the time to take inventory of what  little you do have and what is most important for you to get for the coming week, so you jot down a few items on a list and head to the store. While at the store, you pull out the crumpled piece of paper that was once your shopping list. You struggle through the store until you fill a shopping cart. Once home, you remember all the items you forgot you needed. And during the coming week, you find that you do not have the ingredients necessary to make actual meals--you reluctantly resolve to eating PB&Js for the rest of the week. We have all been here. Planning out future meals and making a comprehensive list BEFORE grocery shopping is the ideal, but it seems too overwhelming. With the Plate Planner application, that struggle is gone! In one, easy to use app, you can easily plan meals for an entire week. The application will then automatically generate a list of items you need at the store. It is as easy as that! \r ### Design\r ![Image of the proposed Plate Planner application layout](https://github.com/chloekprice/startup/blob/main/startup_design.jpg?raw=true)\r ### Key Features & Technologies\r The following key features and technologies will be employed in the creation of this startup:\r - Authentification: The user will securely login over HTTPS on the main page. Once logged in, they can navigate to the calendar page which will display the user's name.\r - Database Data: The application will store the meals planned for the week on the calendar page for each individual user. The calendar will remain untouched each time the user logs in, until they manually reset the calendar.\r - WebSocket Data: In realtime, the application will generate an updated shopping list that corresponds to the meals planned for the coming week.\r - HTML: will provide structure for the three main pages (login, calendar, and shopping list).\r - CSS: will provide styling for the pages that can be adjusted to fit various screen sizes.\r - JavaScript: will provide login, calendar manipulation, and shopping list editing.\r ## HTML Deliverable\r For this deliverable I made the framework for my application using HTML.",
  "main": "calendar.js",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "vite": "^5.0.8"
  },
  "dependencies": {
    "bootstrap": "^5.3.2",
    "react": "^18.2.0",
    "react-bootstrap": "^2.9.1",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.21.0"
  }
}
